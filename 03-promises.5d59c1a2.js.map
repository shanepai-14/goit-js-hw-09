{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA4BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnBbL,EAAKa,iBAAiB,UAAU,SAASC,GAEvCA,EAAMC,iBApBR,WAGC,MAAMC,EAAQC,OAAOjB,EAAKkB,SAAgB,MAAEC,OACtCC,EAAOH,OAAOjB,EAAKkB,SAAe,KAAEC,OACpCE,EAASJ,OAAOjB,EAAKkB,SAAiB,OAAEC,OAE9C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IAG1CnB,EAAcmB,EAFCN,EAAQI,EAAOE,GAEEC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAChDmB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEzEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoBxB,QAAeC,MAAU,G,CAOvEwB,GACAf,EAAMgB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nfunction getFormValues() {\n\n\n const delay = Number(form.elements[\"delay\"].value);\n const step = Number(form.elements[\"step\"].value);\n const amount = Number(form.elements[\"amount\"].value);\n\n for (var position = 1; position <= amount; position++) {\n  const delays = delay + step * position;\n\n  createPromise(position, delays).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n}\nform.addEventListener(\"submit\", function(event) {\n\n  event.preventDefault();\n  getFormValues();\n  event.currentTarget.reset();\n});\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","elements","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$getFormValues","currentTarget","reset"],"version":3,"file":"03-promises.5d59c1a2.js.map"}